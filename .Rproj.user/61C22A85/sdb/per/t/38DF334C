{
    "contents" : "# assignment\nsetwd(\"~/GitHub/pml\")\ntraining <- read.csv(\"~/GitHub/pml/pml-training.csv\")\ntesting <- read.csv(\"~/GitHub/pml/pml-testing.csv\")\ncolnames(training)\n\nlibrary(knitr); library(caret); library(randomForest); library(gbm);\n#library(party);library(ElemStatLearn); \nlibrary(MASS);library(plyr); library(survival); library(splines);\n\n\nallColumns <- colnames(training)\n\n# id columns that are not NA in testing data set\navailColumns <- cbind(colnames(training),apply(testing, 2, max))\navailColumns <- availColumns[is.na(availColumns[,2])==FALSE ,1]\navailTrain <- training[, cbind(availColumns)[-c(1,3:6)]]\navailTest <- testing[, colnames(testing) %in% colnames(availTrain)]\n\n# Not run for rmd file\n#modGBM <- train(classe ~ ., method=\"gbm\",data=availTrain,verbose=FALSE)\n#modRF <- train(classe ~ ., method=\"rf\",data=availTrain,verbose=FALSE,\n               type = \"prob\")\n\nanswers <- predict(modGBM, newdata = availTest)\n#B A B A A E D B A A B C B A E E A B B B\n#B A B A A E D B A A B C B A E E A B B B\n\nvarImp(availRF)\nmodRF\nmodGBM\n\npredict(modRF, newdata = availTest) # identical to GBM\n#getwd()\n\npml_write_files = function(x){\n  n = length(x)\n  for(i in 1:n){\n    filename = paste0(\"problem_id_\",i,\".txt\")\n    if (i < 10){\n      prefix = paste(\"problem_id_\",\"0\",sep=\"\")\n      filename = paste0(prefix,i,\".txt\")\n    }\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\n  }\n}\n\nsampleClasse <- createDataPartition(y=availTrain$classe,\n                                           p=0.2, list=FALSE)\nsampleC <- availTrain[sampleClasse,]\nsampleUser <- createDataPartition(y=sampleC$user_name,\n                                  p=0.25, list=FALSE)\nsampleU <- sampleC[sampleUser,]\nsampleRF <- train(classe ~ ., method=\"rf\",data=sampleU[,c(1:10,55)],verbose=FALSE)\nsampleRF\nsampleRFa <- train(classe ~ ., method=\"rf\",data=sampleU[,c(11:27,55)],verbose=FALSE)\nsampleRFa\nsampleRFb <- train(classe ~ ., method=\"rf\",data=sampleU[,c(28:41,55)],verbose=FALSE)\nsampleRFb\nsampleRFc <- train(classe ~ ., method=\"rf\",data=sampleU[,c(42:54,55)],verbose=FALSE)\nsampleRFc\navailRF <- train(classe ~ ., method=\"rf\",data=availTrain[sampleClasse,c(1:10,55)],verbose=FALSE)\navailRF\nsystem.time()\nOverall\nnum_window        100.0000\nroll_belt          31.1554\nyaw_belt           22.8421\npitch_belt         22.7179\ntotal_accel_belt    7.0694\ngyros_belt_z        4.3541\nuser_nameeurico     4.3255\naccel_belt_x        3.8776\nuser_namejeremy     3.5353\ngyros_belt_y        2.1700\ngyros_belt_x        2.1581\nuser_namecharles    0.9833\nuser_namecarlitos   0.7608\nuser_namepedro      0.0000\n\n#pml_write_files(answers)\nls()\nread",
    "created" : 1407900830953.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4258925726",
    "id" : "38DF334C",
    "lastKnownWriteTime" : 1408109092,
    "path" : "~/GitHub/pml/assignment.R",
    "project_path" : "assignment.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}