{
    "contents" : "# assignment\nsetwd(\"~/GitHub/pml\")\ntraining <- read.csv(\"~/GitHub/pml/pml-training.csv\")\ntesting <- read.csv(\"~/GitHub/pml/pml-testing.csv\")\ncolnames(training)\n\nlibrary(knitr); library(caret); library(party);library(ElemStatLearn); \nlibrary(MASS);library(plyr); library(gbm); library(survival); library(splines);\nlibrary(randomForest)\n\nallColumns <- colnames(training)\n\n# id columns that are not NA in testing data set\navailColumns <- cbind(colnames(training),apply(testing, 2, max))\navailColumns <- availColumns[is.na(availColumns[,2])==FALSE ,1]\navailTrain <- training[, cbind(availColumns)[-c(1,3:6)]]\navailTest <- testing[, colnames(testing) %in% colnames(availTrain)]\n\nmodGBM <- train(classe ~ ., method=\"gbm\",data=availTrain,verbose=FALSE)\nmodRF <- train(classe ~ ., method=\"rf\",data=availTrain,verbose=FALSE,\n               type = \"prob\")\n\nanswers <- predict(modGBM, newdata = availTest)\n#B A B A A E D B A A B C B A E E A B B B\n\npredict(modRF, newdata = availTest) # identical to GBM\n#getwd()\n\npml_write_files = function(x){\n  n = length(x)\n  for(i in 1:n){\n    filename = paste0(\"problem_id_\",i,\".txt\")\n    if (i < 10){\n      prefix = paste(\"problem_id_\",\"0\",sep=\"\")\n      filename = paste0(prefix,i,\".txt\")\n    }\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\n  }\n}\n\n#pml_write_files(answers)\nls()\nread",
    "created" : 1407900830953.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3070788968",
    "id" : "38DF334C",
    "lastKnownWriteTime" : 1407934778,
    "path" : "~/GitHub/pml/assignment.R",
    "project_path" : "assignment.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}